#!/bin/bash

gethelp() {
	echo "usage: gitp [<commit message>][-f <ssh address>] [-h]"
	echo "	no arguments to pull"
	echo "	-f: first commit"
	echo "	-h: help"
}

showstatus() {
	echo -e "\033[02;37m$1\033[0;39m"
}

while getopts f:h:s OPT
do
	case $OPT in
		f)	status="first_commit"
			address=$OPTARG
			# echo $address
			if [ -z $address ]; then
				exit 1
			fi
			;;
		h)	status="help"
			gethelp
			exit 0
			;;
		s)	status="git_status"
			git status
			exit 0
			;;
		\?) status="unexpected_option"
			showstatus error
			gethelp
			exit 0
		        ;;
	esac
done

if [ $# -eq 0 ]; then
	# gethelp
	# exit 1
	showstatus pulling...
        git pull
	exit 0
elif [ -z $status ]; then
	commit_message=$*
	showstatus pulling...
	git pull
	git add -A
	showstatus committing...
	git commit -m "${commit_message}"
	showstatus pushing...
	git push
	exit 0
fi

if [ -n $address ]; then
	git init
	git add -A
	git commit -m "first commit"
	git remote add origin $address
	git push -u origin master
	exit 0
fi

# warning: push.default is unset; its implicit value has changed in
# Git 2.0 from 'matching' to 'simple'. To squelch this message
# and maintain the traditional behavior, use:

#   git config --global push.default matching

# To squelch this message and adopt the new behavior now, use:

#   git config --global push.default simple

# When push.default is set to 'matching', git will push local branches
# to the remote branches that already exist with the same name.

# Since Git 2.0, Git defaults to the more conservative 'simple'
# behavior, which only pushes the current branch to the corresponding
# remote branch that 'git pull' uses to update the current branch.

# See 'git help config' and search for 'push.default' for further information.
# (the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
# 'current' instead of 'simple' if you sometimes use older versions of Git)
